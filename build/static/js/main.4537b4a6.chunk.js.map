{"version":3,"sources":["config/config.js","utils/api.js","components/FormSelection.js","services/user.service.js","images/Beta-HealthcareLG-Trebuchet-MS-font.png","components/FormResult.js","components/Checkbox.js","components/Form.js","components/Container.js","index.js"],"names":["module","exports","ADDR","axios","method","headers","url","FormSelection","props","retrievedForms","dbForms","history","useHistory","className","length","role","value","id","onChange","e","onMakeSelection","target","map","form","_id","name","type","onClick","push","body","post","API_URL","FormResult","React","useState","isOpen","setIsOpen","success","useEffect","show","Modal","dialogClassName","Header","Title","Body","Footer","as","to","Checkbox","Form","_isMounted","sendForm","preventDefault","checked_approvers","state","checkedApprovers","vapproval","keys","approver","get","filled_by","form_id","formID","form_title","fields","formFields","approved","date_approved","approval","approvers","department","error","then","catch","err","console","log","setState","done","handleChange","data","field","handleNameChange","handleDeptChange","handleValidation","forms","document","querySelectorAll","Array","prototype","slice","call","array","forEach","addEventListener","event","checkValidity","stopPropagation","classList","add","formData","Map","approversValid","bind","fieldsGenerator","this","dataArray","vname","vformFields","UserService","getForm","res","i","api","placeholder","htmlFor","aria-label","selected","options","option","autoComplete","src","logo","alt","Component","Container","selectedFormID","handleFormSelect","path","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4537b4a6.chunk.js","sourcesContent":["module.exports = {\n  ADDR: \"http://localhost\",\n};\n","import axios from \"axios\";\nimport config from \"../config/config\";\n\n// const axiosInstance = axios.create({\n//   baseURL: \":5000\",\n// });\n\nexport default {\n  getForms: () =>\n    axios({\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      url: \"/api/getforms\",\n    }),\n  getApprovers: () =>\n    axios({\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      url: \"/api/getapprovers\",\n    }),\n};\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction FormSelection(props) {\n  const retrievedForms = props.dbForms;\n  let history = useHistory();\n\n  const handleChange = (e) => {\n    props.onMakeSelection(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (props.id !== \"-1\") {\n      history.push(\"/form\");\n    }\n  };\n\n  return (\n    <div className=\"container-form-selection\">\n      {retrievedForms && retrievedForms.length === 0 ? (\n        <div className=\"d-flex justify-content-center text-center text-light\">\n          <div className=\"row\">\n            <div className=\"col-12 mb-2\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n            <div className=\"col-12\">\n              <strong className=\"\">Loading...</strong>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <form className=\"card bg-light bg-gradient\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title mb-3\">Please select a form</h5>\n            <select\n              value={props.id}\n              className=\"form-select mb-3\"\n              onChange={handleChange}\n            >\n              <option value=\"-1\">-- select a form --</option>\n              {retrievedForms.map((form) => {\n                return (\n                  <option key={form._id} value={form._id}>\n                    {form.name}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"card-footer text-end\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              onClick={handleSubmit}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default FormSelection;\n","import axios from \"axios\";\nimport config from \"../config/config\";\n\nconst API_URL = \"/api/\";\n\nclass UserService {\n  getForm(body) {\n    return axios.post(API_URL + \"getform\", body);\n  }\n}\n\nexport default new UserService();\n","export default __webpack_public_path__ + \"static/media/Beta-HealthcareLG-Trebuchet-MS-font.4688ae12.png\";","import React, { useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction FormResult(props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const success = props.success;\n\n  useEffect(() => {\n    setIsOpen(props.show);\n  }, [props.show]);\n\n  // const hideModal = () => {\n  //   setIsOpen(false);\n  // };\n\n  return success ? (\n    <Modal show={isOpen} dialogClassName=\"modal-dialog-centered\">\n      <div className=\"\">\n        <Modal.Header>\n          <Modal.Title className=\"text-success bg-gradient\">\n            Success!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Your approval request has been submitted.</Modal.Body>\n        <Modal.Footer as=\"footer\">\n          <Link className=\"btn btn-outline-dark\" to=\"/\">\n            Go to homepage\n          </Link>\n        </Modal.Footer>\n      </div>\n    </Modal>\n  ) : (\n    <div className=\"container container-form alert alert-danger\" role=\"alert\">\n      <h5 className=\"alert-heading\">Submission failed</h5>\n      <hr />\n      <p className=\"mb-0\">\n        <Link className=\"btn btn-primary\" to=\"/\">\n          Click here\n        </Link>{\" \"}\n        to fill another form\n      </p>\n    </div>\n  );\n}\n\n// const SuccessMessage = () => {\n//   return (\n//     <div className=\"container container-form alert alert-success\" role=\"alert\">\n//       <h5 className=\"alert-heading\">\n//         Your approval request was successfully submitted!\n//       </h5>\n//       <hr />\n//       <p className=\"mb-0\">\n//         <Link className=\"btn btn-outline-dark\" to=\"/\">\n//           Click here\n//         </Link>{\" \"}\n//         to fill another form\n//       </p>\n//     </div>\n//   );\n// };\n\n// function FailureMessage() {}\n\nexport default FormResult;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Checkbox({\n  class_name = \"\",\n  type = \"checkbox\",\n  value = \"\",\n  id,\n  key_val,\n  checked = false,\n  onChange,\n}) {\n  return (\n    <input\n      className={class_name}\n      type={type}\n      value={value}\n      id={id}\n      key={key_val}\n      onChange={onChange}\n      checked={checked}\n    />\n  );\n}\n\nCheckbox.propTypes = {\n  class_name: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  key_val: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool,\n};\n\nexport default Checkbox;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport api from \"../utils/api\";\nimport config from \"../config/config\";\nimport UserService from \"../services/user.service\";\nimport logo from \"../images/Beta-HealthcareLG-Trebuchet-MS-font.png\";\n\nimport FormResult from \"./FormResult\";\nimport Checkbox from \"./Checkbox\";\n\nclass Form extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      formID: \"\",\n      filled_by: \"\",\n      department: \"\",\n      formFields: [],\n      formData: {},\n      done: false,\n      approvers: [],\n      checkedApprovers: new Map(),\n      approversValid: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.sendForm = this.sendForm.bind(this);\n    // this.handleCheckedChange = this.handleCheckedChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.fieldsGenerator = this.fieldsGenerator.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const dbForms = this.props.dbForms;\n\n    let dataArray = {};\n    var vname = \"\";\n    var vformFields = [];\n    var vfilledBy = \"\";\n    const form_id = this.props.id;\n\n    if (form_id && this._isMounted) {\n      this.setState({ formID: form_id });\n      UserService.getForm({ id: this.props.id }).then((res) => {\n        vname = res.data.name;\n        vformFields = res.data.fields;\n\n        this.setState({\n          name: vname,\n          filled_by: vfilledBy,\n          formFields: vformFields,\n          formData: dataArray,\n        });\n\n        for (let i = 0; i < vformFields.length; i++) {\n          dataArray[vformFields[i].name] = \"\";\n          vformFields[i].value = \"\";\n        }\n      });\n    }\n    // for (let i = 0; i < dbForms.length; i++) {\n    //   if (dbForms[i]._id === this.props.id) {\n    //     form_id = dbForms[i]._id;\n    //     vname = dbForms[i].name;\n    //     vformFields = dbForms[i].fields;\n    //     vfilledBy = dbForms[i].filled_by;\n    //   }\n    // }\n\n    api.getApprovers().then((res) => {\n      if (res.data && this._isMounted) {\n        this.setState({ approvers: res.data });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  fieldsGenerator(fields) {\n    if (fields) {\n      return fields.map((field) => {\n        if (field.type) {\n          switch (field.type.name) {\n            case \"select\":\n              return (\n                <div key={\"div_\" + field._id} className=\"form-floating mb-3\">\n                  <select\n                    className=\"form-select\"\n                    id=\"floatingSelect\"\n                    aria-label=\"Floating label\"\n                    onChange={(e) => this.handleDeptChange(e.target.value)}\n                  >\n                    <option selected value=\"\">\n                      -- department --\n                    </option>\n                    {field.type.options.map((option) => {\n                      return (\n                        <option key={\"key_\" + option} value={option}>\n                          {option}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  <label\n                    key={\"label_\" + field._id}\n                    htmlFor=\"floatingSelect\"\n                    className=\"text-muted\"\n                  >\n                    {field.name}\n                  </label>\n                </div>\n              );\n            default:\n              return (\n                <div key={\"div_\" + field._id} className=\"form-floating mb-3\">\n                  <input\n                    key={field._id}\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"floatingInput\"\n                    placeholder={field.name}\n                    onChange={(e) =>\n                      this.handleChange(e.target.value, field._id)\n                    }\n                  />\n                  <label\n                    key={\"label_\" + field._id}\n                    htmlFor=\"floatingInput\"\n                    className=\"text-muted\"\n                  >\n                    {field.name}\n                  </label>\n                </div>\n              );\n          }\n        } else {\n          return (\n            <div key={\"div_\" + field._id} className=\"form-floating mb-3\">\n              <input\n                key={field._id}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"floatingInput\"\n                placeholder={field.name}\n                onChange={(e) => this.handleChange(e.target.value, field._id)}\n              />\n              <label\n                key={\"label_\" + field._id}\n                htmlFor=\"floatingInput\"\n                className=\"text-muted\"\n              >\n                {field.name}\n              </label>\n            </div>\n          );\n        }\n      });\n    } else {\n      return <div>No DATA</div>;\n    }\n  }\n\n  sendForm = (e) => {\n    e.preventDefault();\n    //const date = new Date().getTime();\n    const checked_approvers = this.state.checkedApprovers;\n\n    let vapproval = [];\n\n    for (let approver of checked_approvers.keys()) {\n      if (checked_approvers.get(approver) === true) {\n        vapproval.push(approver);\n      }\n    }\n\n    const form = {\n      filled_by: this.state.filled_by,\n      form_id: this.state.formID,\n      form_title: this.state.name,\n      fields: this.state.formFields,\n      approved: false,\n      date_approved: null,\n      approval: this.state.approvers,\n      department: this.state.department,\n    };\n\n    let error = false;\n\n    if (form.fields) {\n      axios\n        .post(\"/api/sendform\", form)\n        .then()\n        .catch((err) => {\n          error = true;\n          console.log(err);\n        });\n    } else {\n      console.log(\"input fields are required\");\n    }\n\n    if (!error) {\n      this.setState({ done: true });\n    }\n  };\n\n  handleChange = (value, id) => {\n    let data = this.state.formFields;\n\n    for (let field of data) {\n      if (field._id === id) {\n        field.value = value;\n      }\n    }\n\n    this.setState({ formFields: data });\n  };\n\n  handleNameChange = (value) => {\n    this.setState({ filled_by: value });\n  };\n\n  handleDeptChange = (value) => {\n    this.setState({ department: value });\n  };\n\n  handleValidation = (e) => {\n    var forms = document.querySelectorAll(\".needs-validation\");\n\n    Array.prototype.slice.call(forms).array.forEach((form) => {\n      form.addEventListener(\n        \"submit\",\n        (event) => {\n          if (!form.checkValidity()) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n\n          form.classList.add(\"was-validated\");\n        },\n        false\n      );\n    });\n  };\n\n  errorClass(error) {\n    return error ? \"is-invalid\" : \"\";\n  }\n\n  // handleCheckedChange(e) {\n  //   const item = e.target.value;\n  //   const isChecked = e.target.checked;\n  //   this.setState((prevState) => ({\n  //     checkedApprovers: prevState.checkedApprovers.set(item, isChecked),\n  //   }));\n  // }\n\n  validateForm() {}\n\n  render() {\n    if (this.props.id === \"-1\") {\n      return <Redirect to=\"/\" />;\n    }\n\n    const fields = this.state.formFields;\n    const approvers = this.state.approvers;\n\n    return (\n      <div className=\"container-form\">\n        <form className=\"card bg-light bg-gradient\" autoComplete=\"off\">\n          <div className=\"row card-body\">\n            <img src={logo} className=\"img-fluid\" alt=\"logo\"></img>\n          </div>\n          <div className=\"card-body\">\n            <h2 className=\"card-title mb-4 text-center\">\n              {this.state.name} form\n            </h2>\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"floatingInput\"\n                placeholder=\"Employee Name\"\n                onChange={(e) => {\n                  this.handleNameChange(e.target.value);\n                }}\n              />\n              <label className=\"text-muted\" htmlFor=\"floatingInput\">\n                Employee Name\n              </label>\n            </div>\n            {this.fieldsGenerator(fields)}\n          </div>\n          <div className=\"card-body\">\n            {/* {approvers.map((approver) => {\n              return (\n                <div className=\"form-check\" key={\"div_\" + approver._id}>\n                  <Checkbox\n                    class_name={`form-check-input ${this.errorClass(\n                      this.state.approversValid\n                    )}`}\n                    value={approver._id}\n                    id={\"id_\" + approver._id}\n                    key={\"input_\" + approver._id}\n                    checked={this.state.checkedApprovers.get(approver._id)}\n                    onChange={this.handleCheckedChange}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor={\"id_\" + approver._id}\n                    key={\"label_\" + approver._id}\n                  >\n                    {approver.firstname} {approver.lastname}\n                  </label>\n                  <div className=\"invalid-feedback\">\n                    You must select an approver.\n                  </div>\n                </div>\n              );\n            })} */}\n          </div>\n          <div className=\"card-footer text-end\">\n            <button\n              className=\"btn btn-outline-primary\"\n              type=\"button\"\n              onClick={this.sendForm}\n            >\n              Submit\n            </button>\n          </div>\n          <FormResult success={true} show={this.state.done} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport api from \"../utils/api\";\n// import axios from \"axios\";\n\nimport FormSelection from \"./FormSelection\";\nimport Form from \"./Form\";\n\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedFormID: \"-1\", dbForms: [] };\n\n    this.handleFormSelect = this.handleFormSelect.bind(this);\n    // this.getForms = this.getForms.bind(this);\n  }\n\n  componentDidMount() {\n    api.getForms().then((res) => {\n      if (res.data) {\n        this.setState({ dbForms: res.data });\n      }\n    });\n    // this.getForms();\n  }\n\n  // getForms = () => {\n  //   axios.get(\"/api/forms\").then((res) => {\n  //     if (res.data) {\n  //       this.setState({\n  //         dbForms: res.data,\n  //       });\n  //     }\n  //   });\n  // };\n\n  handleFormSelect(id) {\n    this.setState({ selectedFormID: id });\n  }\n\n  render() {\n    const id = this.state.selectedFormID;\n    const dbForms = this.state.dbForms;\n\n    return (\n      <BrowserRouter>\n        <div className=\"App-Container container d-flex align-items-center justify-content-center\">\n          <Switch>\n            <Route\n              path=\"/\"\n              component={() => (\n                <FormSelection\n                  id={id}\n                  dbForms={dbForms}\n                  onMakeSelection={this.handleFormSelect}\n                />\n              )}\n              exact\n            />\n            <Route\n              path=\"/form\"\n              component={() => <Form id={id} dbForms={dbForms} />}\n              exact\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Container from \"./components/Container\";\n\nReactDOM.render(<Container />, document.getElementById(\"root\"));\n"],"sourceRoot":""}