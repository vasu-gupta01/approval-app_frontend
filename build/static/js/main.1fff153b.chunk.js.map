{"version":3,"sources":["utils/api.js","components/FormSelection.js","services/user.service.js","images/Beta-HealthcareLG-Trebuchet-MS-font.png","components/FormResult.js","components/Form.js","components/Container.js","index.js","config/config.js"],"names":["axios","method","headers","url","FormSelection","props","retrievedForms","dbForms","history","useHistory","className","length","role","value","id","onChange","e","onMakeSelection","target","map","form","_id","name","type","onClick","push","body","post","API_URL","get","FormResult","React","useState","isOpen","setIsOpen","success","useEffect","show","Modal","dialogClassName","Header","Title","Body","Footer","as","to","Form","_isMounted","sendForm","preventDefault","validateForm","checked_approvers","state","checkedApprovers","vapproval","keys","approver","filled_by","form_id","formID","form_title","fields","formFields","approved","date_approved","approval","approvers","department","error","then","catch","err","console","log","setState","done","handleChange","data","field","handleNameChange","handleDeptChange","formData","Map","approversValid","timeout","validMessages","validFields","departments","bind","fieldsGenerator","this","dataArray","vname","vformFields","UserService","getForm","res","i","api","getDepartments","autoComplete","placeholder","htmlFor","style","display","aria-label","selected","option","disableClock","val","valid_messages","valid_fields","valid","required","src","logo","alt","Component","Container","selectedFormID","handleFormSelect","path","component","exact","ReactDOM","render","document","getElementById","module","exports","ADDR"],"mappings":"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","file":"static/js/main.1fff153b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport config from \"../config/config\";\n\n// const axiosInstance = axios.create({\n//   baseURL: \":5000\",\n// });\n\nexport default {\n  getForms: () =>\n    axios({\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      url: \"/api/getforms\",\n    }),\n  getApprovers: () =>\n    axios({\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      url: \"/api/getapprovers\",\n    }),\n};\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction FormSelection(props) {\n  const retrievedForms = props.dbForms;\n  let history = useHistory();\n\n  const handleChange = (e) => {\n    props.onMakeSelection(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (props.id !== \"-1\") {\n      history.push(\"/form\");\n    }\n  };\n\n  return (\n    <div className=\"container-form-selection\">\n      {retrievedForms && retrievedForms.length === 0 ? (\n        <div className=\"d-flex justify-content-center text-center text-light\">\n          <div className=\"row\">\n            <div className=\"col-12 mb-2\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n            <div className=\"col-12\">\n              <strong className=\"\">Loading...</strong>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <form className=\"card bg-light bg-gradient\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title mb-3\">Please select a form</h5>\n            <select\n              value={props.id}\n              className=\"form-select mb-3\"\n              onChange={handleChange}\n            >\n              <option value=\"-1\">-- select a form --</option>\n              {retrievedForms.map((form) => {\n                return (\n                  <option key={form._id} value={form._id}>\n                    {form.name}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"card-footer text-end\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              onClick={handleSubmit}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default FormSelection;\n","import axios from \"axios\";\nimport config from \"../config/config\";\n\nconst API_URL = \"/api/\";\n\nclass UserService {\n  getForm(body) {\n    return axios.post(API_URL + \"getform\", body);\n  }\n\n  getDepartments() {\n    return axios.get(API_URL + \"getdepartments\");\n  }\n}\n\nexport default new UserService();\n","export default __webpack_public_path__ + \"static/media/Beta-HealthcareLG-Trebuchet-MS-font.4688ae12.png\";","import React, { useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction FormResult(props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const success = props.success;\n\n  useEffect(() => {\n    setIsOpen(props.show);\n  }, [props.show]);\n\n  // const hideModal = () => {\n  //   setIsOpen(false);\n  // };\n\n  return success ? (\n    <Modal show={isOpen} dialogClassName=\"modal-dialog-centered\">\n      <div className=\"\">\n        <Modal.Header>\n          <Modal.Title className=\"text-success bg-gradient\">\n            Success!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Your approval request has been submitted.</Modal.Body>\n        <Modal.Footer as=\"footer\">\n          <Link className=\"btn btn-outline-dark\" to=\"/\">\n            Go to homepage\n          </Link>\n        </Modal.Footer>\n      </div>\n    </Modal>\n  ) : (\n    <div className=\"container container-form alert alert-danger\" role=\"alert\">\n      <h5 className=\"alert-heading\">Submission failed</h5>\n      <hr />\n      <p className=\"mb-0\">\n        <Link className=\"btn btn-primary\" to=\"/\">\n          Click here\n        </Link>{\" \"}\n        to fill another form\n      </p>\n    </div>\n  );\n}\n\n// const SuccessMessage = () => {\n//   return (\n//     <div className=\"container container-form alert alert-success\" role=\"alert\">\n//       <h5 className=\"alert-heading\">\n//         Your approval request was successfully submitted!\n//       </h5>\n//       <hr />\n//       <p className=\"mb-0\">\n//         <Link className=\"btn btn-outline-dark\" to=\"/\">\n//           Click here\n//         </Link>{\" \"}\n//         to fill another form\n//       </p>\n//     </div>\n//   );\n// };\n\n// function FailureMessage() {}\n\nexport default FormResult;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport api from \"../utils/api\";\nimport config from \"../config/config\";\nimport UserService from \"../services/user.service\";\nimport logo from \"../images/Beta-HealthcareLG-Trebuchet-MS-font.png\";\n\nimport FormResult from \"./FormResult\";\nimport Moment from \"moment\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nclass Form extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      formID: \"\",\n      filled_by: \"\",\n      department: \"\",\n      formFields: [],\n      formData: {},\n      done: false,\n      approvers: [],\n      checkedApprovers: new Map(),\n      approversValid: false,\n      timeout: null,\n      validMessages: { name: \"Error\" },\n      validFields: { name: true },\n      departments: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.sendForm = this.sendForm.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.fieldsGenerator = this.fieldsGenerator.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const dbForms = this.props.dbForms;\n\n    let dataArray = {};\n    var vname = \"\";\n    var vformFields = [];\n    var vfilledBy = \"\";\n    const form_id = this.props.id;\n\n    if (form_id && this._isMounted) {\n      this.setState({ formID: form_id });\n      UserService.getForm({ id: this.props.id }).then((res) => {\n        vname = res.data.name;\n        vformFields = res.data.fields;\n\n        this.setState({\n          name: vname,\n          filled_by: vfilledBy,\n          formFields: vformFields,\n          formData: dataArray,\n        });\n\n        for (let i = 0; i < vformFields.length; i++) {\n          dataArray[vformFields[i].name] = \"\";\n          vformFields[i].value = \"\";\n        }\n      });\n    }\n    // for (let i = 0; i < dbForms.length; i++) {\n    //   if (dbForms[i]._id === this.props.id) {\n    //     form_id = dbForms[i]._id;\n    //     vname = dbForms[i].name;\n    //     vformFields = dbForms[i].fields;\n    //     vfilledBy = dbForms[i].filled_by;\n    //   }\n    // }\n\n    api.getApprovers().then((res) => {\n      if (res.data && this._isMounted) {\n        this.setState({ approvers: res.data });\n      }\n    });\n\n    UserService.getDepartments().then((res) => {\n      if (res.data && this._isMounted) {\n        this.setState({ departments: res.data });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  fieldsGenerator(fields) {\n    if (fields) {\n      return fields.map((field) => {\n        if (field.type) {\n          switch (field.type.name) {\n            case \"select\":\n              return (\n                <div key={\"div_\" + field._id} className=\"form-floating mb-3\">\n                  <select\n                    className=\"form-select\"\n                    id=\"floatingSelect\"\n                    aria-label=\"Floating label\"\n                    onChange={(e) => this.handleDeptChange(e.target.value)}\n                  >\n                    <option selected value=\"\">\n                      -- department --\n                    </option>\n                    {this.state.departments.map((option) => {\n                      return (\n                        <option key={\"key_\" + option._id} value={option.name}>\n                          {option.name}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  <label\n                    key={\"label_\" + field._id}\n                    htmlFor=\"floatingSelect\"\n                    className=\"text-muted\"\n                  >\n                    {field.name}\n                  </label>\n                  <div\n                    style={{\n                      display: this.state.validFields[field._id]\n                        ? \"none\"\n                        : \"block\",\n                    }}\n                  >\n                    <strong className=\"text-danger m-1\">\n                      {this.state.validMessages[field._id]}\n                    </strong>\n                  </div>\n                </div>\n              );\n            case \"time\":\n              return (\n                <div key={\"div_\" + field._id} className=\" mb-3\">\n                  <label className=\"me-3\">{field.name}: </label>\n                  <DateTimePicker\n                    disableClock\n                    value={this.state.timeout}\n                    onChange={(val) => {\n                      this.setState({ timeout: val });\n                      this.handleChange(val, field._id);\n                    }}\n                  />\n                  <div\n                    style={{\n                      display: this.state.validFields[field._id]\n                        ? \"none\"\n                        : \"block\",\n                    }}\n                  >\n                    <strong className=\"text-danger m-1\">\n                      {this.state.validMessages[field._id]}\n                    </strong>\n                  </div>\n                </div>\n              );\n\n            default:\n              return (\n                <div key={\"div_\" + field._id} className=\"form-floating mb-3\">\n                  <input\n                    key={field._id}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    className=\"form-control\"\n                    id=\"floatingInput\"\n                    placeholder={field.name}\n                    onChange={(e) =>\n                      this.handleChange(e.target.value, field._id)\n                    }\n                  />\n                  <label\n                    key={\"label_\" + field._id}\n                    htmlFor=\"floatingInput\"\n                    className=\"text-muted\"\n                  >\n                    {field.name}\n                  </label>\n                  <div\n                    style={{\n                      display: this.state.validFields[field._id]\n                        ? \"none\"\n                        : \"block\",\n                    }}\n                  >\n                    <strong className=\"text-danger m-1\">\n                      {this.state.validMessages[field._id]}\n                    </strong>\n                  </div>\n                </div>\n              );\n          }\n        } else {\n          return (\n            <div key={\"div_\" + field._id} className=\"form-floating mb-3\">\n              <input\n                key={field._id}\n                type=\"text\"\n                autoComplete=\"off\"\n                className=\"form-control\"\n                id=\"floatingInput\"\n                placeholder={field.name}\n                onChange={(e) => this.handleChange(e.target.value, field._id)}\n              />\n              <label\n                key={\"label_\" + field._id}\n                htmlFor=\"floatingInput\"\n                className=\"text-muted\"\n              >\n                {field.name}\n              </label>\n              <div\n                style={{\n                  display: this.state.validFields[field._id] ? \"none\" : \"block\",\n                }}\n              >\n                <strong className=\"text-danger m-1\">\n                  {this.state.validMessages[field._id]}\n                </strong>\n              </div>\n            </div>\n          );\n        }\n      });\n    } else {\n      return <div>No DATA</div>;\n    }\n  }\n\n  sendForm = (e) => {\n    e.preventDefault();\n    //const date = new Date().getTime();\n    if (this.validateForm()) {\n      const checked_approvers = this.state.checkedApprovers;\n\n      let vapproval = [];\n\n      for (let approver of checked_approvers.keys()) {\n        if (checked_approvers.get(approver) === true) {\n          vapproval.push(approver);\n        }\n      }\n\n      const form = {\n        filled_by: this.state.filled_by,\n        form_id: this.state.formID,\n        form_title: this.state.name,\n        fields: this.state.formFields,\n        approved: false,\n        date_approved: null,\n        approval: this.state.approvers,\n        department: this.state.department,\n      };\n\n      let error = false;\n\n      if (form.fields) {\n        axios\n          .post(\"/api/sendform\", form)\n          .then()\n          .catch((err) => {\n            error = true;\n            console.log(err);\n          });\n      } else {\n        console.log(\"input fields are required\");\n      }\n\n      if (!error) {\n        this.setState({ done: true });\n      }\n    }\n  };\n\n  handleChange = (value, id) => {\n    let data = this.state.formFields;\n\n    for (let field of data) {\n      if (field._id === id) {\n        field.value = value;\n      }\n    }\n\n    this.setState({ formFields: data });\n  };\n\n  handleNameChange = (value) => {\n    this.setState({ filled_by: value });\n  };\n\n  handleDeptChange = (value) => {\n    let data = this.state.formFields;\n\n    for (let field of data) {\n      if (field.name === \"Department\") {\n        field.value = value;\n      }\n    }\n    this.setState({ department: value });\n    this.setState({ formFields: data });\n  };\n\n  // handleCheckedChange(e) {\n  //   const item = e.target.value;\n  //   const isChecked = e.target.checked;\n  //   this.setState((prevState) => ({\n  //     checkedApprovers: prevState.checkedApprovers.set(item, isChecked),\n  //   }));\n  // }\n\n  validateForm() {\n    let valid_messages = this.state.validMessages;\n    let valid_fields = this.state.validFields;\n\n    let valid = true;\n\n    if (this.state.filled_by === \"\") {\n      valid_fields[\"name\"] = false;\n      valid_messages[\"name\"] = \"This field is required.\";\n      valid = false;\n    } else {\n      valid_fields[\"name\"] = true;\n    }\n\n    for (let field of this.state.formFields) {\n      if (field.required && field.value === \"\") {\n        valid_fields[field._id] = false;\n        valid_messages[field._id] = \"This field is required.\";\n        valid = false;\n      } else {\n        valid_fields[field._id] = true;\n      }\n    }\n\n    this.setState({ validMessages: valid_messages, validFields: valid_fields });\n\n    return valid;\n  }\n\n  render() {\n    if (this.props.id === \"-1\") {\n      return <Redirect to=\"/\" />;\n    }\n\n    const fields = this.state.formFields;\n    const approvers = this.state.approvers;\n\n    return (\n      <div className=\"container-form\">\n        <form className=\"card bg-light bg-gradient\" autoComplete=\"off\">\n          <div className=\"row card-body\">\n            <img src={logo} className=\"img-fluid\" alt=\"logo\"></img>\n          </div>\n          <div className=\"card-body\">\n            <h2 className=\"card-title mb-4 text-center\">\n              {this.state.name} form\n            </h2>\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"text\"\n                autoComplete=\"off\"\n                className=\"form-control\"\n                id=\"floatingInput\"\n                placeholder=\"Employee Name\"\n                onChange={(e) => {\n                  this.handleNameChange(e.target.value);\n                }}\n              />\n              <label className=\"text-muted\" htmlFor=\"floatingInput\">\n                Employee Name\n              </label>\n              <div\n                style={{\n                  display: this.state.validFields[\"name\"] ? \"none\" : \"block\",\n                }}\n              >\n                <strong className=\"text-danger m-1\">\n                  {this.state.validMessages[\"name\"]}\n                </strong>\n              </div>\n            </div>\n            {this.fieldsGenerator(fields)}\n          </div>\n          <div className=\"card-body\">\n            {/* {approvers.map((approver) => {\n              return (\n                <div className=\"form-check\" key={\"div_\" + approver._id}>\n                  <Checkbox\n                    class_name={`form-check-input ${this.errorClass(\n                      this.state.approversValid\n                    )}`}\n                    value={approver._id}\n                    id={\"id_\" + approver._id}\n                    key={\"input_\" + approver._id}\n                    checked={this.state.checkedApprovers.get(approver._id)}\n                    onChange={this.handleCheckedChange}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor={\"id_\" + approver._id}\n                    key={\"label_\" + approver._id}\n                  >\n                    {approver.firstname} {approver.lastname}\n                  </label>\n                  <div className=\"invalid-feedback\">\n                    You must select an approver.\n                  </div>\n                </div>\n              );\n            })} */}\n          </div>\n          <div className=\"card-footer text-end\">\n            <button\n              className=\"btn btn-outline-primary\"\n              type=\"button\"\n              onClick={this.sendForm}\n            >\n              Submit\n            </button>\n          </div>\n          <FormResult success={true} show={this.state.done} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport api from \"../utils/api\";\n// import axios from \"axios\";\n\nimport FormSelection from \"./FormSelection\";\nimport Form from \"./Form\";\n\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedFormID: \"-1\", dbForms: [] };\n\n    this.handleFormSelect = this.handleFormSelect.bind(this);\n    // this.getForms = this.getForms.bind(this);\n  }\n\n  componentDidMount() {\n    api.getForms().then((res) => {\n      if (res.data) {\n        this.setState({ dbForms: res.data });\n      }\n    });\n    // this.getForms();\n  }\n\n  // getForms = () => {\n  //   axios.get(\"/api/forms\").then((res) => {\n  //     if (res.data) {\n  //       this.setState({\n  //         dbForms: res.data,\n  //       });\n  //     }\n  //   });\n  // };\n\n  handleFormSelect(id) {\n    this.setState({ selectedFormID: id });\n  }\n\n  render() {\n    const id = this.state.selectedFormID;\n    const dbForms = this.state.dbForms;\n\n    return (\n      <BrowserRouter>\n        <div className=\"App-Container container d-flex align-items-center justify-content-center\">\n          <Switch>\n            <Route\n              path=\"/\"\n              component={() => (\n                <FormSelection\n                  id={id}\n                  dbForms={dbForms}\n                  onMakeSelection={this.handleFormSelect}\n                />\n              )}\n              exact\n            />\n            <Route\n              path=\"/form\"\n              component={() => <Form id={id} dbForms={dbForms} />}\n              exact\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Container from \"./components/Container\";\n\nReactDOM.render(<Container />, document.getElementById(\"root\"));\n","module.exports = {\n  ADDR: \"http://localhost\",\n};\n"],"sourceRoot":""}